컨트롤러1
	/**
	 * 교과과정(ABEEK) => 상세정보
	 *
	 * @return
	 */
	@RequestMapping(value="/views/findSbjtCrsInfo.do")
	public String findSbjtCrsInfo(){
		return "/manage/edu/findSbjtCrsInfo";
	}

컨트롤러2 완료

	/**
	 * 교과과정(ABEEK) => 등록폼
	 *
	 * @return
	 */
	@RequestMapping(value="/views/findSbjtCrsForm.do")
	public ModelAndView findSbjtCrsForm(@RequestParam HashMap<String,Object> paramMap){
		return new ModelAndView("/manage/edu/findSbjtCrsForm",boardService.getBoardInfo(paramMap));
	}
	/**
	 * 학부소개 => 학부조직 => 리스트
	 *
	 * @return
	 */
	@RequestMapping(value="/views/findSustOrgzList.do")
	public ModelAndView findSustOrgzList(HashMap<String,Object> paramMap, Model model){
		return new ModelAndView("/manage/sustIntro/findSustOrgzList",orgzService.getOrgzList(paramMap));
	}
컨트롤러2 등록폼 @RequestParam
	/**
	 * 학부소개 => 학부조직 => 등록폼
	 *
	 * @return
	 */
	@RequestMapping(value="/views/findSustOrgzForm.do")
	public ModelAndView findSustOrgzForm(@RequestParam HashMap<String,Object> paramMap){
		System.out.println(paramMap);
		return new ModelAndView("/manage/sustIntro/findSustOrgzForm",orgzService.getOrgzInfo(paramMap));
	}
	/**
	 * 학부소개 => 학부조직 => 등록
	 *
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="/saveOrgz.do")
	public void saveOrgz(Orgz orgz){
		orgzService.saveOrgz(orgz);
	}

컨트롤러3 완료


	/**
	 * 교과과정(ABEEK) => 리스트
	 *
	 * @return
	 * @return
	 */
	@RequestMapping(value="/views/findSbjtCrsList.do")
	public String getBoardList(HashMap<String,Object> paramMap,Model model){
		model.addAttribute("boardList",boardService.getBoardList(paramMap));
		return "/manage/edu/findSbjtCrsList";
	}
/*	@RequestMapping(value="/views/findSbjtCrsList.do")
	public ModelAndView ModelAndView(HashMap<String,Object> paramMap,Model model){
		return new ModelAndView("/manage/edu/findSbjtCrsList",boardService.getBoardList(paramMap));
	}*/








ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
게시판별 코드주고 분리하기 paramMap.put("boardNum","57");
	/**
	 * 자유게시판 => 리스트
	 *
	 * @return
	 */
	@RequestMapping(value="/views/findFreeBoardList.do")
	public ModelAndView modelAndView(HashMap<String,Object> paramMap,Model model){
		paramMap.put("boardNum","57");
		return new ModelAndView("/manage/notify/findFreeBoardList",BoardService.getBoardList(paramMap));
	}

xml where 절에 board_num = #{boardNum} 추가해주기
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
BoardService.java   =>  paramMap.put("munuCode",munuCode);
	/**
	 * 리스트
	 *
	 * @param paramMap
	 * @return
	 */
	public HashMap<String,Object> getBoardList(String munuCode,HashMap<String,Object> paramMap){
		paramMap.put("munuCode",munuCode);
		HashMap<String,Object> result=new HashMap<String,Object>();
		result.put("list",boardRepository.getBoardList(paramMap));
		return result;
	}

NotifyController.java  => return new ModelAndView("/manage/notify/findFreeBoardList",BoardService.getBoardList("free",paramMap));
	/**
	 * 자유게시판 => 리스트
	 *
	 * @return
	 */
	@RequestMapping(value="/views/findFreeBoardList.do")
	public ModelAndView modelAndView(HashMap<String,Object> paramMap,Model model){
		return new ModelAndView("/manage/notify/findFreeBoardList",BoardService.getBoardList("free",paramMap));
	}



또는
	@RequestMapping(value="/views/findSbjtCrsList.do")
	public String getBoardList(HashMap<String,Object> paramMap,Model model){
		model.addAttribute("boardList",boardService.getBoardList("edu",paramMap));
		return "/manage/edu/findSbjtCrsList";
	}
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
메뉴마다따로보이게하기 => HashMap 앞에 String으로 컬럼명추가 => paramMap.put("컬럼", "컬럼");
boardService.java
	/**
	 * 리스트
	 *
	 * @param paramMap
	 * @return
	 */
	/*
	 * public HashMap<String,Object> getBoardList(HashMap<String,Object> paramMap){
	 * HashMap<String,Object> result=new HashMap<String,Object>();
	 * result.put("list",boardRepository.getBoardList(paramMap));
	 * return result;
	 * }
	 */
	public HashMap<String,Object> getBoardList(String menuCd,String catCd,HashMap<String,Object> paramMap){
		paramMap.put("menuCd",menuCd);
		paramMap.put("catCd",catCd);
		HashMap<String,Object> result=new HashMap<String,Object>();
		result.put("list",boardRepository.getBoardList(paramMap));
		return result;
	}


각 컨트롤러에 paramMap.put 한 컬럼의 값을 지정해주면 그 게시판의 목록만 뿌려줌

	/**
	 * 사람들관리 => 리스트
	 *
	 * @return
	 */
	@RequestMapping(value="/views/findPrsMngtList.do")
	public String findPrsMngtList(HashMap<String,Object> paramMap,Model model){
		model.addAttribute("boardList",boardService.getBoardList("prs","1",paramMap));
		return "/manage/prs/findPrsMngtList";
	}

























