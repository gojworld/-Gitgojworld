/**
	 * 오류신고
	 * @param
	 */
	@Secured(policy = SecurityPolicy.SESSION)
	@RequestMapping("/findHelpDesk.do")
	public String findHelpDesk(@RequestParam(defaultValue = "0") int recvSeq, @RequestParam(defaultValue = "0") String myVocCd, @RequestParam(defaultValue = "0") String mainVoc, VocmWebSearch vocmWebSearch, Model model) {
		String url = chkUserTyCd(); // 외부유지보수, 이메일사용자일 경우 redirect
		if (url != null) {
			return url;
		} else {
			CommCodeDataSearch codeDataSearch = new CommCodeDataSearch();
			UserDetails userDetails = SecurityContextHelper.getUserDetails();
			codeDataSearch.setCmnCdId("VOC_CAMP_CD"); // 캠퍼스구분
			String acctInfoId = userDetails.getAcctInfoId();
			Recv recv = recvSeq != 0 ? vocmService.findRecv(recvSeq) : new Recv();
			recv.setMyVocCd(myVocCd);
			recv.setMainVoc(mainVoc);
			if (StringUtils.defaultString(recv.getWrirId()).equals(userDetails.getIntgUid())) {
				model.addAttribute("attachFile", fileService.findFileDetByFileSeq(recv.getAtcfSeq()));
				model.addAttribute("recv", recv);
			} else {
				model.addAttribute("recv", new Recv());
			}
			model.addAttribute("vocCampCdList", codeService.findCommCodeDataList(codeDataSearch));
			model.addAttribute("userInfo", acctInfoId != null ? vocmService.findUserInfo(acctInfoId) : new CamelCaseMap());  // 로그인사용자정보(eml, telno)
			model.addAttribute("vocClsfCdList", vocmService.findVocMngtClsfCd("2", userDetails.getDeptLoctCd(), ""));
			model.addAttribute("vocCd", vocmService.findVocCd("2"));
			model.addAttribute("currentDate", utilService.findCurrentDate("YYYY-MM-DD")); // 서버시간
			return "vocm/findHelpDesk";
		}
	}